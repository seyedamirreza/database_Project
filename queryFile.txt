CREATE TABLE user (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    firstName VARCHAR(100) NOT NULL,
    lastName VARCHAR(100) NOT NULL,
    password VARCHAR(255) NOT NULL,
    wallet DECIMAL(10,2) DEFAULT 0.00,
    email VARCHAR(255) UNIQUE NOT NULL,
    phoneNumber VARCHAR(20) UNIQUE NOT NULL,
    type ENUM('admin', 'passenger') NOT NULL,
    registerDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    accountStatus ENUM('active', 'inactive', 'banned') DEFAULT 'active'
);

CREATE TABLE ticket (
    ticket_id INT AUTO_INCREMENT PRIMARY KEY,
    company_id INT NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    capacity INT NOT NULL,
    class ENUM('economy', 'business', 'first-class') NOT NULL,
    status ENUM('available', 'sold', 'canceled') NOT NULL,
    two_way BOOLEAN DEFAULT FALSE,
    passengerCount INT NOT NULL,
    FOREIGN KEY (company_id) REFERENCES company(company_id) ON DELETE CASCADE
);

CREATE TABLE timing (
    timing_id INT AUTO_INCREMENT PRIMARY KEY,
    date DATE NOT NULL,
    clockGo TIME NOT NULL,
    clockArrived TIME NOT NULL,
    delay INT DEFAULT 0
);

CREATE TABLE reservation (
    reservation_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    ticket_id INT NOT NULL,
    reservation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    expireTime TIMESTAMP NOT NULL,
    status ENUM('pending', 'confirmed', 'canceled') DEFAULT 'pending',
    FOREIGN KEY (user_id) REFERENCES user(user_id) ON DELETE CASCADE,
    FOREIGN KEY (ticket_id) REFERENCES ticket(ticket_id) ON DELETE CASCADE
);

CREATE TABLE payment (
    payment_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    reservation_id INT NOT NULL,
    value DECIMAL(10,2) NOT NULL,
    method ENUM('credit_card', 'paypal', 'cash') NOT NULL,
    status ENUM('pending', 'completed', 'failed') DEFAULT 'pending',
    time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES user(user_id) ON DELETE CASCADE,
    FOREIGN KEY (reservation_id) REFERENCES reservation(reservation_id) ON DELETE CASCADE
);

CREATE TABLE report (
    report_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    ticket_id INT NOT NULL,
    reportType ENUM('complaint', 'feedback', 'lost_item') NOT NULL,
    description TEXT NOT NULL,
    status ENUM('open', 'resolved', 'closed') DEFAULT 'open',
    FOREIGN KEY (user_id) REFERENCES user(user_id) ON DELETE CASCADE,
    FOREIGN KEY (ticket_id) REFERENCES ticket(ticket_id) ON DELETE CASCADE
);

CREATE TABLE vehicle (
    vehicle_id INT AUTO_INCREMENT PRIMARY KEY,
    companyName VARCHAR(255) NOT NULL,
    capacity INT NOT NULL,
    origin VARCHAR(255) NOT NULL,
    destination VARCHAR(255) NOT NULL,
    stations TEXT,
    facilities TEXT
);

CREATE TABLE bus (
    bus_id INT AUTO_INCREMENT PRIMARY KEY,
    vehicle_id INT NOT NULL,
    class ENUM('standard', 'luxury') NOT NULL,
    seatState TEXT NOT NULL,
    FOREIGN KEY (vehicle_id) REFERENCES vehicle(vehicle_id) ON DELETE CASCADE
);

CREATE TABLE flight (
    flight_id INT AUTO_INCREMENT PRIMARY KEY,
    vehicle_id INT NOT NULL,
    class ENUM('economy', 'business', 'first-class') NOT NULL,
    flightNumber VARCHAR(50) NOT NULL UNIQUE,
    stops TEXT,
    FOREIGN KEY (vehicle_id) REFERENCES vehicle(vehicle_id) ON DELETE CASCADE
);

CREATE TABLE train (
    train_id INT AUTO_INCREMENT PRIMARY KEY,
    vehicle_id INT NOT NULL,
    components TEXT NOT NULL,
    stars INT CHECK(stars BETWEEN 1 AND 5),
    stops TEXT,
    FOREIGN KEY (vehicle_id) REFERENCES vehicle(vehicle_id) ON DELETE CASCADE
);
